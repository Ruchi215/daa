#include <stdio.h>
#include <math.h>

// Function prototype
int place(int x[], int k);

// Function to solve N-Queens problem
void nqueen(int n) {
    int x[10], k = 1, i, count = 0;
    x[k] = 0;

    while (k != 0) {
        x[k] = x[k] + 1;

        while (x[k] <= n && !place(x, k))
            x[k] = x[k] + 1;

        if (x[k] <= n) {
            if (k == n) {
                count++;
                printf("\nSolution %d is\n", count);
                for (i = 1; i <= n; i++)
                    printf("%d\t", x[i]);
                printf("\n");
            } else {
                k = k + 1;
                x[k] = 0;
            }
        } else {
            k--;
        }
    }
}

// Function to check if a queen can be placed on x[k]
int place(int x[], int k) {
    int i;
    for (i = 1; i < k; i++) {
        if (x[i] == x[k] || abs(x[i] - x[k]) == abs(i - k))
            return 0;
    }
    return 1;
}

int main() {
    int n;

    printf("Enter the Number of Queens\n");
    scanf("%d", &n);

    if (n == 1 || n == 2 || n == 3) {
        printf("Solution is not possible\n");
    } else {
        nqueen(n);
    }

    return 0;
}
